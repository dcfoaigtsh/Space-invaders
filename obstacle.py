import pygame  # 匯入Pygame模組

class Block(pygame.sprite.Sprite):  # 定義Block類，繼承自pygame.sprite.Sprite
    def __init__(self, x, y):  # 初始化Block物件
        super().__init__()  # 呼叫父類的初始化方法
        self.image = pygame.Surface((3, 3))  # 創建方塊的表面，大小為3x3
        self.image.fill((243, 216, 63))  # 填充方塊的顏色為黃色
        self.rect = self.image.get_rect(topleft=(x, y))  # 設定方塊的位置

# 定義障礙物的形狀，1表示有方塊，0表示無方塊
grid = [
    [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0],
    [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0],
    [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
    [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1],
    [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1],
    [1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1]
]

class Obstacle:  # 定義Obstacle類
    def __init__(self, x, y):  # 初始化Obstacle物件
        self.blocks_group = pygame.sprite.Group()  # 創建一個方塊群組
        for row in range(len(grid)):  # 遍歷每一行
            for column in range(len(grid[0])):  # 遍歷每一列
                if grid[row][column] == 1:  # 如果該位置有方塊
                    pos_x = x + column * 3  # 計算方塊的X軸位置
                    pos_y = y + row * 3  # 計算方塊的Y軸位置
                    block = Block(pos_x, pos_y)  # 創建Block實例
                    self.blocks_group.add(block)  # 將Block實例加入群組
